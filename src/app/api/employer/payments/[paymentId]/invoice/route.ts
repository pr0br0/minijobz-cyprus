import { NextRequest, NextResponse } from "next/server";
import { getServerSession } from "next-auth";
import { authOptions } from "@/lib/auth";
import { db } from "@/lib/db";
// Removed unused enum import

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ paymentId: string }> }
) {
  try {
    const session = await getServerSession(authOptions);
    
  if (!session?.user?.id || session.user.role !== 'EMPLOYER') {
      return NextResponse.json(
        { error: "Unauthorized" },
        { status: 401 }
      );
    }

    const { paymentId } = await params;

    // Get employer profile
    const employer = await db.employer.findUnique({
      where: {
        userId: session.user.id,
      },
    });

    if (!employer) {
      return NextResponse.json(
        { error: "Employer profile not found" },
        { status: 404 }
      );
    }

    // Get payment and verify it belongs to this employer
    const payment = await db.payment.findFirst({
      where: {
        id: paymentId,
        employerId: employer.id,
      },
    });

    if (!payment) {
      return NextResponse.json(
        { error: "Payment not found" },
        { status: 404 }
      );
    }

    // In a real implementation, you would:
    // 1. Generate a PDF invoice using a library like PDFKit or jsPDF
    // 2. Upload it to cloud storage (AWS S3, etc.)
    // 3. Return the URL or serve the file directly
    
    // For now, we'll create a simple text-based invoice
    const invoiceContent = generateInvoiceContent(payment, employer);

    // Create response with invoice file
    const response = new NextResponse(invoiceContent, {
      status: 200,
      headers: {
        "Content-Type": "text/plain",
        "Content-Disposition": `attachment; filename="invoice-${paymentId}.txt"`,
      },
    });

    return response;
  } catch (error) {
    console.error("Error generating invoice:", error);
    return NextResponse.json(
      { error: "Internal server error" },
      { status: 500 }
    );
  }
}

function generateInvoiceContent(payment: any, employer: any): string {
  const date = new Date(payment.createdAt).toLocaleDateString();
  
  return `
================================================================================
                           CYPRUS JOBS - INVOICE
================================================================================

Invoice Number: INV-${payment.id}
Date: ${date}
Status: ${payment.status}

BILL TO:
${employer.companyName}
${employer.contactName || ""}
${employer.contactEmail || ""}
${employer.contactPhone || ""}

================================================================================
PAYMENT DETAILS
================================================================================

Description: ${payment.description}
Amount: €${payment.amount}
Currency: ${payment.currency}
Payment ID: ${payment.stripePaymentIntentId}

================================================================================
PAYMENT SUMMARY
================================================================================
Subtotal: €${payment.amount}
VAT (0%): €0.00
Total: €${payment.amount}

================================================================================
PAYMENT METHOD
================================================================================
Payment processed via Stripe
Payment Intent ID: ${payment.stripePaymentIntentId}

================================================================================
TERMS & CONDITIONS
================================================================================
- This invoice is automatically generated by Cyprus Jobs
- All payments are non-refundable unless otherwise specified
- For any questions regarding this invoice, please contact our support team

Thank you for using Cyprus Jobs!

================================================================================
Generated on: ${new Date().toLocaleString()}
Page 1 of 1
================================================================================
  `.trim();
}